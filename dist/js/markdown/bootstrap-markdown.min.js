/* ===================================================
 * bootstrap-markdown.js v2.7.0
 * http://github.com/toopay/bootstrap-markdown
 * ===================================================
 * Copyright 2013-2014 Taufan Aditya
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */
!function(a){"use strict";// jshint ;_;
/* MARKDOWN CLASS DEFINITION
   * ========================== */
var b=function(b,c){
// Class Properties
this.$ns="bootstrap-markdown",this.$element=a(b),this.$editable={el:null,type:null,attrKeys:[],attrValues:[],content:null},this.$options=a.extend(!0,{},a.fn.markdown.defaults,c,this.$element.data(),this.$element.data("options")),this.$oldContent=null,this.$isPreview=!1,this.$isFullscreen=!1,this.$editor=null,this.$textarea=null,this.$handler=[],this.$callback=[],this.$nextTab=[],this.showEditor()};b.prototype={constructor:b,__alterButtons:function(b,c){var d=this.$handler,e="all"==b,f=this;a.each(d,function(a,d){var g=!0;g=e?!1:d.indexOf(b)<0,0==g&&c(f.$editor.find('button[data-handler="'+d+'"]'))})},__buildButtons:function(b,c){var d,e=this.$ns,f=this.$handler,g=this.$callback;for(d=0;d<b.length;d++){
// Build each group container
var h,i=b[d];for(h=0;h<i.length;h++){
// Build each button group
var j,k=i[h].data,l=a("<div/>",{"class":"btn-group"});for(j=0;j<k.length;j++){var m,n,o=k[j],p=e+"-"+o.name,q=this.__getIcon(o.icon),r=o.btnText?o.btnText:"",s=o.btnClass?o.btnClass:"btn",t=o.tabIndex?o.tabIndex:"-1",u="undefined"!=typeof o.hotkey?o.hotkey:"",v="undefined"!=typeof jQuery.hotkeys&&""!==u?" ("+u+")":"";
// Construct the button object
m=a("<button></button>"),m.text(" "+this.__localize(r)).addClass("btn-default btn-sm").addClass(s),s.match(/btn\-(primary|success|info|warning|danger|link)/)&&m.removeClass("btn-default"),m.attr({type:"button",title:this.__localize(o.title)+v,tabindex:t,"data-provider":e,"data-handler":p,"data-hotkey":u}),1==o.toggle&&m.attr("data-toggle","button"),n=a("<span/>"),n.addClass(q),n.prependTo(m),
// Attach the button object
l.append(m),
// Register handler and callback
f.push(p),g.push(o.callback)}
// Attach the button group into container dom
c.append(l)}}return c},__setListener:function(){
// Set size and resizable Properties
var b="undefined"!=typeof this.$textarea.attr("rows"),c=this.$textarea.val().split("\n").length>5?this.$textarea.val().split("\n").length:"5",d=b?this.$textarea.attr("rows"):c;this.$textarea.attr("rows",d),this.$options.resize&&this.$textarea.css("resize",this.$options.resize),this.$textarea.on("focus",a.proxy(this.focus,this)).on("keypress",a.proxy(this.keypress,this)).on("keyup",a.proxy(this.keyup,this)).on("change",a.proxy(this.change,this)),this.eventSupported("keydown")&&this.$textarea.on("keydown",a.proxy(this.keydown,this)),
// Re-attach markdown data
this.$textarea.data("markdown",this)},__handle:function(b){var c=a(b.currentTarget),d=this.$handler,e=this.$callback,f=c.attr("data-handler"),g=d.indexOf(f),h=e[g];
// Trigger the focusin
a(b.currentTarget).focus(),h(this),
// Trigger onChange for each button handle
this.change(this),
// Unless it was the save handler,
// focusin the textarea
f.indexOf("cmdSave")<0&&this.$textarea.focus(),b.preventDefault()},__localize:function(b){var c=a.fn.markdown.messages,d=this.$options.language;return"undefined"!=typeof c&&"undefined"!=typeof c[d]&&"undefined"!=typeof c[d][b]?c[d][b]:b},__getIcon:function(a){return"object"==typeof a?a[this.$options.iconlibrary]:a},setFullscreen:function(b){var c=this.$editor,d=this.$textarea;b===!0?(c.addClass("md-fullscreen-mode"),a("body").addClass("md-nooverflow"),this.$options.onFullscreen(this)):(c.removeClass("md-fullscreen-mode"),a("body").removeClass("md-nooverflow")),this.$isFullscreen=b,d.focus()},showEditor:function(){var b,c=this,d=this.$ns,e=this.$element,f=(e.css("height"),e.css("width"),this.$editable),g=this.$handler,h=this.$callback,i=this.$options,j=a("<div/>",{"class":"md-editor",click:function(){c.focus()}});
// Prepare the editor
if(null==this.$editor){
// Create the panel
var k=a("<div/>",{"class":"md-header btn-toolbar"}),l=[];
// Wrap the textarea
if(i.buttons.length>0&&(l=l.concat(i.buttons[0])),i.additionalButtons.length>0&&(l=l.concat(i.additionalButtons[0])),
// Reduce and/or reorder the button groups
i.reorderButtonGroups.length>0&&(l=l.filter(function(a){return i.reorderButtonGroups.indexOf(a.name)>-1}).sort(function(a,b){return i.reorderButtonGroups.indexOf(a.name)<i.reorderButtonGroups.indexOf(b.name)?-1:i.reorderButtonGroups.indexOf(a.name)>i.reorderButtonGroups.indexOf(b.name)?1:0})),
// Build the buttons
l.length>0&&(k=this.__buildButtons([l],k)),i.fullscreen.enable&&k.append('<div class="md-controls"><a class="md-control md-control-fullscreen" href="#"><span class="'+this.__getIcon(i.fullscreen.icons.fullscreenOn)+'"></span></a></div>').on("click",".md-control-fullscreen",function(a){a.preventDefault(),c.setFullscreen(!0)}),j.append(k),e.is("textarea"))e.before(j),b=e,b.addClass("md-input"),j.append(b);else{var m="function"==typeof toMarkdown?toMarkdown(e.html()):e.html(),n=a.trim(m);
// This is some arbitrary content that could be edited
b=a("<textarea/>",{"class":"md-input",val:n}),j.append(b),
// Save the editable
f.el=e,f.type=e.prop("tagName").toLowerCase(),f.content=e.html(),a(e[0].attributes).each(function(){f.attrKeys.push(this.nodeName),f.attrValues.push(this.nodeValue)}),
// Set editor to blocked the original container
e.replaceWith(j)}var o=a("<div/>",{"class":"md-footer"}),p=!1,q="";
// Create the footer if savable
if(i.savable){p=!0;var r="cmdSave";
// Register handler and callback
g.push(r),h.push(i.onSave),o.append('<button class="btn btn-success" data-provider="'+d+'" data-handler="'+r+'"><i class="icon icon-white icon-ok"></i> '+this.__localize("Save")+"</button>")}
// Set height
if(q="function"==typeof i.footer?i.footer(this):i.footer,""!==a.trim(q)&&(p=!0,o.append(q)),p&&j.append(o),i.width&&"inherit"!==i.width&&(jQuery.isNumeric(i.width)?(j.css("display","table"),b.css("width",i.width+"px")):j.addClass(i.width)),i.height&&"inherit"!==i.height)if(jQuery.isNumeric(i.height)){var s=i.height;k&&(s=Math.max(0,s-k.outerHeight())),o&&(s=Math.max(0,s-o.outerHeight())),b.css("height",s+"px")}else j.addClass(i.height);
// Reference
this.$editor=j,this.$textarea=b,this.$editable=f,this.$oldContent=this.getContent(),this.__setListener(),
// Set editor attributes, data short-hand API and listener
this.$editor.attr("id",(new Date).getTime()),this.$editor.on("click",'[data-provider="bootstrap-markdown"]',a.proxy(this.__handle,this)),(this.$element.is(":disabled")||this.$element.is("[readonly]"))&&(this.$editor.addClass("md-editor-disabled"),this.disableButtons("all")),this.eventSupported("keydown")&&"object"==typeof jQuery.hotkeys&&k.find('[data-provider="bootstrap-markdown"]').each(function(){var c=a(this),d=c.attr("data-hotkey");""!==d.toLowerCase()&&b.bind("keydown",d,function(){return c.trigger("click"),!1})}),"preview"===i.initialstate?this.showPreview():"fullscreen"===i.initialstate&&i.fullscreen.enable&&this.setFullscreen(!0)}else this.$editor.show();
// hide hidden buttons from options
// disable disabled buttons from options
// Trigger the onShow hook
return i.autofocus&&(this.$textarea.focus(),this.$editor.addClass("active")),i.fullscreen.enable&&i.fullscreen!==!1&&(this.$editor.append('          <div class="md-fullscreen-controls">            <a href="#" class="exit-fullscreen" title="Exit fullscreen"><span class="'+this.__getIcon(i.fullscreen.icons.fullscreenOff)+'"></span></a>          </div>'),this.$editor.on("click",".exit-fullscreen",function(a){a.preventDefault(),c.setFullscreen(!1)})),this.hideButtons(i.hiddenButtons),this.disableButtons(i.disabledButtons),i.onShow(this),this},parseContent:function(){var a,b=this.$options.onPreview(this);// Try to get the content from callback
if("string"==typeof b)
// Set the content based by callback content
a=b;else{
// Set the content
var c=this.$textarea.val();a="object"==typeof markdown?markdown.toHTML(c):"function"==typeof marked?marked(c):c}return a},showPreview:function(){var b,c=(this.$options,this.$textarea),d=c.next(),e=a("<div/>",{"class":"md-preview","data-provider":"markdown-preview"});
// Give flag that tell the editor enter preview mode
// Disable all buttons
// Build preview element
// If there is footer element, insert the preview container before it
// Otherwise, just append it after textarea
// Set the preview element dimensions
// Hide the last-active textarea
// Attach the editor instances
return this.$isPreview=!0,this.disableButtons("all").enableButtons("cmdPreview"),b=this.parseContent(),e.html(b),d&&"md-footer"==d.attr("class")?e.insertBefore(d):c.parent().append(e),e.css({width:c.outerWidth()+"px",height:c.outerHeight()+"px"}),this.$options.resize&&e.css("resize",this.$options.resize),c.hide(),e.data("markdown",this),(this.$element.is(":disabled")||this.$element.is("[readonly]"))&&(this.$editor.addClass("md-editor-disabled"),this.disableButtons("all")),this},hidePreview:function(){
// Give flag that tell the editor quit preview mode
this.$isPreview=!1;
// Obtain the preview container
var a=this.$editor.find('div[data-provider="markdown-preview"]');
// Remove the preview container
// Enable all buttons
// Disable configured disabled buttons
// Back to the editor
return a.remove(),this.enableButtons("all"),this.disableButtons(this.$options.disabledButtons),this.$textarea.show(),this.__setListener(),this},isDirty:function(){return this.$oldContent!=this.getContent()},getContent:function(){return this.$textarea.val()},setContent:function(a){return this.$textarea.val(a),this},findSelection:function(a){var b,c=this.getContent();if(b=c.indexOf(a),b>=0&&a.length>0){var d,e=this.getSelection();return this.setSelection(b,b+a.length),d=this.getSelection(),this.setSelection(e.start,e.end),d}return null},getSelection:function(){var a=this.$textarea[0];/* browser not supported */
return("selectionStart"in a&&function(){var b=a.selectionEnd-a.selectionStart;return{start:a.selectionStart,end:a.selectionEnd,length:b,text:a.value.substr(a.selectionStart,b)}}||function(){return null})()},setSelection:function(a,b){var c=this.$textarea[0];/* browser not supported */
return("selectionStart"in c&&function(){c.selectionStart=a,c.selectionEnd=b}||function(){return null})()},replaceSelection:function(a){var b=this.$textarea[0];/* browser not supported */
return("selectionStart"in b&&function(){
// Set cursor to the last replacement end
return b.value=b.value.substr(0,b.selectionStart)+a+b.value.substr(b.selectionEnd,b.value.length),b.selectionStart=b.value.length,this}||function(){return b.value+=a,jQuery(b)})()},getNextTab:function(){
// Shift the nextTab
if(0==this.$nextTab.length)return null;var a,b=this.$nextTab.shift();return"function"==typeof b?a=b():"object"==typeof b&&b.length>0&&(a=b),a},setNextTab:function(a,b){
// Push new selection into nextTab collections
if("string"==typeof a){var c=this;this.$nextTab.push(function(){return c.findSelection(a)})}else if("number"==typeof a&&"number"==typeof b){var d=this.getSelection();this.setSelection(a,b),this.$nextTab.push(this.getSelection()),this.setSelection(d.start,d.end)}},__parseButtonNameParam:function(a){var b=[];return"string"==typeof a?b.push(a):b=a,b},enableButtons:function(b){var c=this.__parseButtonNameParam(b),d=this;return a.each(c,function(a,b){d.__alterButtons(c[a],function(a){a.removeAttr("disabled")})}),this},disableButtons:function(b){var c=this.__parseButtonNameParam(b),d=this;return a.each(c,function(a,b){d.__alterButtons(c[a],function(a){a.attr("disabled","disabled")})}),this},hideButtons:function(b){var c=this.__parseButtonNameParam(b),d=this;return a.each(c,function(a,b){d.__alterButtons(c[a],function(a){a.addClass("hidden")})}),this},showButtons:function(b){var c=this.__parseButtonNameParam(b),d=this;return a.each(c,function(a,b){d.__alterButtons(c[a],function(a){a.removeClass("hidden")})}),this},eventSupported:function(a){var b=a in this.$element;return b||(this.$element.setAttribute(a,"return;"),b="function"==typeof this.$element[a]),b},keyup:function(a){var b=!1;switch(a.keyCode){case 40:// down arrow
case 38:// up arrow
case 16:// shift
case 17:// ctrl
case 18:// alt
break;case 9:// tab
var c;if(c=this.getNextTab(),null!=c){
// Get the nextTab if exists
var d=this;setTimeout(function(){d.setSelection(c.start,c.end)},500),b=!0}else{
// The next tab memory contains nothing...
// check the cursor position to determine tab action
var e=this.getSelection();e.start==e.end&&e.end==this.getContent().length?
// The cursor already reach the end of the content
b=!1:(
// Put the cursor to the end
this.setSelection(this.getContent().length,this.getContent().length),b=!0)}break;case 13:// enter
b=!1;break;case 27:// escape
this.$isFullscreen&&this.setFullscreen(!1),b=!1;break;default:b=!1}b&&(a.stopPropagation(),a.preventDefault()),this.$options.onChange(this)},change:function(a){return this.$options.onChange(this),this},focus:function(b){var c=this.$options,d=(c.hideable,this.$editor);
// Blur other markdown(s)
// Trigger the onFocus hook
return d.addClass("active"),a(document).find(".md-editor").each(function(){if(a(this).attr("id")!=d.attr("id")){var b;b=a(this).find("textarea").data("markdown"),null==b&&(b=a(this).find('div[data-provider="markdown-preview"]').data("markdown")),b&&b.blur()}}),c.onFocus(this),this},blur:function(b){var c=this.$options,d=c.hideable,e=this.$editor,f=this.$editable;if(e.hasClass("active")||0==this.$element.parent().length){if(e.removeClass("active"),d)
// Check for editable elements
if(null!=f.el){
// Build the original element
var g=a("<"+f.type+"/>"),h=this.getContent(),i="object"==typeof markdown?markdown.toHTML(h):h;a(f.attrKeys).each(function(a,b){g.attr(f.attrKeys[a],f.attrValues[a])}),
// Get the editor content
g.html(i),e.replaceWith(g)}else e.hide();
// Trigger the onBlur hook
c.onBlur(this)}return this}};/* MARKDOWN PLUGIN DEFINITION
  * ========================== */
var c=a.fn.markdown;a.fn.markdown=function(c){return this.each(function(){var d=a(this),e=d.data("markdown"),f="object"==typeof c&&c;e||d.data("markdown",e=new b(this,f))})},a.fn.markdown.messages={},a.fn.markdown.defaults={/* Editor Properties */
autofocus:!1,hideable:!1,savable:!1,width:"inherit",height:"inherit",resize:"none",iconlibrary:"glyph",language:"en",initialstate:"editor",/* Buttons Properties */
buttons:[[{name:"groupFont",data:[{name:"cmdBold",hotkey:"Ctrl+B",title:"Bold",icon:{glyph:"glyphicon glyphicon-bold",fa:"fa fa-bold","fa-3":"icon-bold"},callback:function(a){
// Give/remove ** surround the selection
var b,c,d=a.getSelection(),e=a.getContent();b=0==d.length?a.__localize("strong text"):d.text,"**"==e.substr(d.start-2,2)&&"**"==e.substr(d.end,2)?(a.setSelection(d.start-2,d.end+2),a.replaceSelection(b),c=d.start-2):(a.replaceSelection("**"+b+"**"),c=d.start+2),a.setSelection(c,c+b.length)}},{name:"cmdItalic",title:"Italic",hotkey:"Ctrl+I",icon:{glyph:"glyphicon glyphicon-italic",fa:"fa fa-italic","fa-3":"icon-italic"},callback:function(a){
// Give/remove * surround the selection
var b,c,d=a.getSelection(),e=a.getContent();b=0==d.length?a.__localize("emphasized text"):d.text,"_"==e.substr(d.start-1,1)&&"_"==e.substr(d.end,1)?(a.setSelection(d.start-1,d.end+1),a.replaceSelection(b),c=d.start-1):(a.replaceSelection("_"+b+"_"),c=d.start+1),a.setSelection(c,c+b.length)}},{name:"cmdHeading",title:"Heading",hotkey:"Ctrl+H",icon:{glyph:"glyphicon glyphicon-header",fa:"fa fa-font","fa-3":"icon-font"},callback:function(a){
// Append/remove ### surround the selection
var b,c,d,e,f=a.getSelection(),g=a.getContent();b=0==f.length?a.__localize("heading text"):f.text+"\n",d=4,"### "==g.substr(f.start-d,d)||(d=3,"###"==g.substr(f.start-d,d))?(a.setSelection(f.start-d,f.end),a.replaceSelection(b),c=f.start-d):f.start>0&&(e=g.substr(f.start-1,1),!!e&&"\n"!=e)?(a.replaceSelection("\n\n### "+b),c=f.start+6):(a.replaceSelection("### "+b),c=f.start+4),a.setSelection(c,c+b.length)}}]},{name:"groupLink",data:[{name:"cmdUrl",title:"URL/Link",hotkey:"Ctrl+L",icon:{glyph:"glyphicon glyphicon-link",fa:"fa fa-link","fa-3":"icon-link"},callback:function(b){
// Give [] surround the selection and prepend the link
var c,d,e,f=b.getSelection();b.getContent();
//ACE
if(c=0==f.length?b.__localize("enter link description here"):f.text,"bootbox"in window)bootbox.prompt(b.__localize("Insert Hyperlink"),function(e){if(null!=e&&""!=e&&"http://"!=e&&"http"==e.substr(0,4)){var g=a("<div>"+e+"</div>").text();
// transform selection and set the cursor into chunked text
b.replaceSelection("["+c+"]("+g+")"),d=f.start+1,
// Set the cursor
b.setSelection(d,d+c.length)}});else if(e=prompt(b.__localize("Insert Hyperlink"),"http://"),null!=e&&""!=e&&"http://"!=e&&"http"==e.substr(0,4)){var g=a("<div>"+e+"</div>").text();
// transform selection and set the cursor into chunked text
b.replaceSelection("["+c+"]("+g+")"),d=f.start+1,
// Set the cursor
b.setSelection(d,d+c.length)}}},{name:"cmdImage",title:"Image",hotkey:"Ctrl+G",icon:{glyph:"glyphicon glyphicon-picture",fa:"fa fa-picture-o","fa-3":"icon-picture"},callback:function(b){
// Give ![] surround the selection and prepend the image link
var c,d,e,f=b.getSelection();b.getContent();
//ACE
if(c=0==f.length?b.__localize("enter image description here"):f.text,"bootbox"in window)bootbox.prompt(b.__localize("Insert Image Hyperlink"),function(e){if(null!=e&&""!=e&&"http://"!=e&&"http"==e.substr(0,4)){var g=a("<div>"+e+"</div>").text();
// transform selection and set the cursor into chunked text
b.replaceSelection("!["+c+"]("+g+' "'+b.__localize("enter image title here")+'")'),d=f.start+2,
// Set the next tab
b.setNextTab(b.__localize("enter image title here")),
// Set the cursor
b.setSelection(d,d+c.length)}});else if(e=prompt(b.__localize("Insert Image Hyperlink"),"http://"),null!=e&&""!=e&&"http://"!=e&&"http"==e.substr(0,4)){var g=a("<div>"+e+"</div>").text();
// transform selection and set the cursor into chunked text
b.replaceSelection("!["+c+"]("+g+' "'+b.__localize("enter image title here")+'")'),d=f.start+2,
// Set the next tab
b.setNextTab(b.__localize("enter image title here")),
// Set the cursor
b.setSelection(d,d+c.length)}}}]},{name:"groupMisc",data:[{name:"cmdList",hotkey:"Ctrl+U",title:"Unordered List",icon:{glyph:"glyphicon glyphicon-list",fa:"fa fa-list","fa-3":"icon-list-ul"},callback:function(b){
// Prepend/Give - surround the selection
var c,d,e=b.getSelection();b.getContent();
// transform selection and set the cursor into chunked text
if(0==e.length)c=b.__localize("list text here"),b.replaceSelection("- "+c),d=e.start+2;else if(e.text.indexOf("\n")<0)c=e.text,b.replaceSelection("- "+c),d=e.start+2;else{var f=[];f=e.text.split("\n"),c=f[0],a.each(f,function(a,b){f[a]="- "+b}),b.replaceSelection("\n\n"+f.join("\n")),
// Set the cursor
d=e.start+4}
// Set the cursor
b.setSelection(d,d+c.length)}},{name:"cmdListO",hotkey:"Ctrl+O",title:"Ordered List",icon:{glyph:"glyphicon glyphicon-th-list",fa:"fa fa-list-ol","fa-3":"icon-list-ol"},callback:function(b){
// Prepend/Give - surround the selection
var c,d,e=b.getSelection();b.getContent();
// transform selection and set the cursor into chunked text
if(0==e.length)c=b.__localize("list text here"),b.replaceSelection("1. "+c),d=e.start+3;else if(e.text.indexOf("\n")<0)c=e.text,b.replaceSelection("1. "+c),d=e.start+3;else{var f=[];f=e.text.split("\n"),c=f[0],a.each(f,function(a,b){f[a]="1. "+b}),b.replaceSelection("\n\n"+f.join("\n")),
// Set the cursor
d=e.start+5}
// Set the cursor
b.setSelection(d,d+c.length)}},{name:"cmdCode",hotkey:"Ctrl+K",title:"Code",icon:{glyph:"glyphicon glyphicon-asterisk",fa:"fa fa-code","fa-3":"icon-code"},callback:function(a){
// Give/remove ** surround the selection
var b,c,d=a.getSelection(),e=a.getContent();b=0==d.length?a.__localize("code text here"):d.text,"`"==e.substr(d.start-1,1)&&"`"==e.substr(d.end,1)?(a.setSelection(d.start-1,d.end+1),a.replaceSelection(b),c=d.start-1):(a.replaceSelection("`"+b+"`"),c=d.start+1),a.setSelection(c,c+b.length)}},{name:"cmdQuote",hotkey:"Ctrl+Q",title:"Quote",icon:{glyph:"glyphicon glyphicon-comment",fa:"fa fa-quote-left","fa-3":"icon-quote-left"},callback:function(b){
// Prepend/Give - surround the selection
var c,d,e=b.getSelection();b.getContent();
// transform selection and set the cursor into chunked text
if(0==e.length)c=b.__localize("quote here"),b.replaceSelection("> "+c),d=e.start+2;else if(e.text.indexOf("\n")<0)c=e.text,b.replaceSelection("> "+c),d=e.start+2;else{var f=[];f=e.text.split("\n"),c=f[0],a.each(f,function(a,b){f[a]="> "+b}),b.replaceSelection("\n\n"+f.join("\n")),
// Set the cursor
d=e.start+4}
// Set the cursor
b.setSelection(d,d+c.length)}}]},{name:"groupUtil",data:[{name:"cmdPreview",toggle:!0,hotkey:"Ctrl+P",title:"Preview",btnText:"Preview",btnClass:"btn btn-primary btn-sm",icon:{glyph:"glyphicon glyphicon-search",fa:"fa fa-search","fa-3":"icon-search"},callback:function(a){
// Check the preview mode and toggle based on this flag
var b=a.$isPreview;0==b?
// Give flag that tell the editor enter preview mode
a.showPreview():a.hidePreview()}}]}]],additionalButtons:[],// Place to hook more buttons by code
reorderButtonGroups:[],hiddenButtons:[],// Default hidden buttons
disabledButtons:[],// Default disabled buttons
footer:"",fullscreen:{enable:!0,icons:{fullscreenOn:{fa:"fa fa-expand",glyph:"glyphicon glyphicon-fullscreen","fa-3":"icon-resize-full"},fullscreenOff:{fa:"fa fa-compress",glyph:"glyphicon glyphicon-fullscreen","fa-3":"icon-resize-small"}}},/* Events hook */
onShow:function(a){},onPreview:function(a){},onSave:function(a){},onBlur:function(a){},onFocus:function(a){},onChange:function(a){},onFullscreen:function(a){}},a.fn.markdown.Constructor=b,/* MARKDOWN NO CONFLICT
  * ==================== */
a.fn.markdown.noConflict=function(){return a.fn.markdown=c,this};/* MARKDOWN GLOBAL FUNCTION & DATA-API
  * ==================================== */
var d=function(a){var b=a;return b.data("markdown")?void b.data("markdown").showEditor():void b.markdown()},e=function(b){var c,d=!1,e=a(b.currentTarget);
// Check whether it was editor childs or not
"focusin"!=b.type&&"click"!=b.type||1!=e.length||"object"!=typeof e[0]||(c=e[0].activeElement,a(c).data("markdown")||("undefined"==typeof a(c).parent().parent().parent().attr("class")||a(c).parent().parent().parent().attr("class").indexOf("md-editor")<0?("undefined"==typeof a(c).parent().parent().attr("class")||a(c).parent().parent().attr("class").indexOf("md-editor")<0)&&(d=!0):d=!1),d&&a(document).find(".md-editor").each(function(){var b=a(c).parent();if(a(this).attr("id")!=b.attr("id")){var d;d=a(this).find("textarea").data("markdown"),null==d&&(d=a(this).find('div[data-provider="markdown-preview"]').data("markdown")),d&&d.blur()}}),b.stopPropagation())};a(document).on("click.markdown.data-api",'[data-provide="markdown-editable"]',function(b){d(a(this)),b.preventDefault()}).on("click",function(a){e(a)}).on("focusin",function(a){e(a)}).ready(function(){a('textarea[data-provide="markdown"]').each(function(){d(a(this))})})}(window.jQuery);