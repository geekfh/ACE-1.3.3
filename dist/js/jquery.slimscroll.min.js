/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.3.3
 *
 */
!function(a){a.fn.extend({slimScroll:function(b){var c={
// width in pixels of the visible scroll area
width:"auto",
// height in pixels of the visible scroll area
height:"250px",
// width in pixels of the scrollbar and rail
size:"7px",
// scrollbar color, accepts any hex/color value
color:"#000",
// scrollbar position - left/right
position:"right",
// distance in pixels between the side edge and the scrollbar
distance:"1px",
// default scroll position on load - top / bottom / $('selector')
start:"top",
// sets scrollbar opacity
opacity:.4,
// enables always-on mode for the scrollbar
alwaysVisible:!1,
// check if we should hide the scrollbar when user is hovering over
disableFadeOut:!1,
// sets visibility of the rail
railVisible:!1,
// sets rail color
railColor:"#333",
// sets rail opacity
railOpacity:.2,
// whether  we should use jQuery UI Draggable to enable bar dragging
railDraggable:!0,
// defautlt CSS class of the slimscroll rail
railClass:"slimScrollRail",
// defautlt CSS class of the slimscroll bar
barClass:"slimScrollBar",
// defautlt CSS class of the slimscroll wrapper
wrapperClass:"slimScrollDiv",
// check if mousewheel should scroll the window if we reach top/bottom
allowPageScroll:!1,
// scroll amount applied to each mouse wheel step
wheelStep:20,
// scroll amount applied when user is using gestures
touchScrollStep:200,
// sets border radius
borderRadius:"7px",
// sets border radius of the rail
railBorderRadius:"7px"},d=a.extend(c,b);
// maintain chainability
// do it for every element that matches selector
return this.each(function(){function c(b){
// use mouse wheel only when mouse is over
if(j){var b=b||window.event,c=0;b.wheelDelta&&(c=-b.wheelDelta/120),b.detail&&(c=b.detail/3);var f=b.target||b.srcTarget||b.srcElement;a(f).closest("."+d.wrapperClass).is(v.parent())&&
// scroll content
e(c,!0),
// stop window scroll
b.preventDefault&&!u&&b.preventDefault(),u||(b.returnValue=!1)}}function e(a,b,c){u=!1;var e=a,f=v.outerHeight()-A.outerHeight();if(b&&(e=parseInt(A.css("top"))+a*parseInt(d.wheelStep)/100*A.outerHeight(),e=Math.min(Math.max(e,0),f),e=a>0?Math.ceil(e):Math.floor(e),A.css({top:e+"px"})),p=parseInt(A.css("top"))/(v.outerHeight()-A.outerHeight()),e=p*(v[0].scrollHeight-v.outerHeight()),c){e=a;var g=e/v[0].scrollHeight*v.outerHeight();g=Math.min(Math.max(g,0),f),A.css({top:g+"px"})}
// scroll content
v.scrollTop(e),
// fire scrolling event
v.trigger("slimscrolling",~~e),
// ensure bar is visible
h(),
// trigger hide when scroll is stopped
i()}function f(){window.addEventListener?(this.addEventListener("DOMMouseScroll",c,!1),this.addEventListener("mousewheel",c,!1)):document.attachEvent("onmousewheel",c)}function g(){o=Math.max(v.outerHeight()/v[0].scrollHeight*v.outerHeight(),s),A.css({height:o+"px"});
// hide scrollbar if content is not long enough
var a=o==v.outerHeight()?"none":"block";A.css({display:a})}function h(){
// when bar reached top or bottom
if(
// recalculate bar height
g(),clearTimeout(m),p==~~p){
// publish approporiate event
if(u=d.allowPageScroll,q!=p){var a=0==~~p?"top":"bottom";v.trigger("slimscroll",a)}}else u=!1;
// show only when required
// show only when required
//allow window scroll
return q=p,o>=v.outerHeight()?void(u=!0):(A.stop(!0,!0).fadeIn("fast"),void(d.railVisible&&z.stop(!0,!0).fadeIn("fast")))}function i(){
// only hide when options allow it
d.alwaysVisible||(m=setTimeout(function(){d.disableFadeOut&&j||k||l||(A.fadeOut("slow"),z.fadeOut("slow"))},1e3))}var j,k,l,m,n,o,p,q,r="<div></div>",s=30,u=!1,v=a(this);
// ensure we are not binding it again
if(v.parent().hasClass(d.wrapperClass)){
// start from last bar position
var w=v.scrollTop();
// check if we should scroll existing instance
if(A=v.parent().find("."+d.barClass),z=v.parent().find("."+d.railClass),g(),a.isPlainObject(b)){
// Pass height: auto to an existing slimscroll object to force a resize after contents have changed
if("height"in b&&"auto"==b.height){v.parent().css("height","auto"),v.css("height","auto");var x=v.parent().parent().height();v.parent().css("height",x),v.css("height",x)}if("scrollTo"in b)
// jump to a static point
w=parseInt(d.scrollTo);else if("scrollBy"in b)
// jump by value pixels
w+=parseInt(d.scrollBy);else if("destroy"in b)
// remove slimscroll elements
return A.remove(),z.remove(),void v.unwrap();
// scroll content by the given offset
e(w,!1,!0)}}else if(!(a.isPlainObject(b)&&"destroy"in b)){
// optionally set height to the parent's height
d.height="auto"==d.height?v.parent().height():d.height;
// wrap content
var y=a(r).addClass(d.wrapperClass).css({position:"relative",overflow:"hidden",width:d.width,height:d.height});
// update style for the div
v.css({overflow:"hidden",width:d.width,height:d.height});
// create scrollbar rail
var z=a(r).addClass(d.railClass).css({width:d.size,height:"100%",position:"absolute",top:0,display:d.alwaysVisible&&d.railVisible?"block":"none","border-radius":d.railBorderRadius,background:d.railColor,opacity:d.railOpacity,zIndex:90}),A=a(r).addClass(d.barClass).css({background:d.color,width:d.size,position:"absolute",top:0,opacity:d.opacity,display:d.alwaysVisible?"block":"none","border-radius":d.borderRadius,BorderRadius:d.borderRadius,MozBorderRadius:d.borderRadius,WebkitBorderRadius:d.borderRadius,zIndex:99}),B="right"==d.position?{right:d.distance}:{left:d.distance};z.css(B),A.css(B),
// wrap it
v.wrap(y),
// append to parent div
v.parent().append(A),v.parent().append(z),
// make it draggable and no longer dependent on the jqueryUI
d.railDraggable&&A.bind("mousedown",function(b){var c=a(document);return l=!0,t=parseFloat(A.css("top")),pageY=b.pageY,c.bind("mousemove.slimscroll",function(a){currTop=t+a.pageY-pageY,A.css("top",currTop),e(0,A.position().top,!1)}),c.bind("mouseup.slimscroll",function(a){l=!1,i(),c.unbind(".slimscroll")}),!1}).bind("selectstart.slimscroll",function(a){return a.stopPropagation(),a.preventDefault(),!1}),
// on rail over
z.hover(function(){h()},function(){i()}),
// on bar over
A.hover(function(){k=!0},function(){k=!1}),
// show on parent mouseover
v.hover(function(){j=!0,h(),i()},function(){j=!1,i()}),
// support for mobile
v.bind("touchstart",function(a,b){a.originalEvent.touches.length&&(
// record where touch started
n=a.originalEvent.touches[0].pageY)}),v.bind("touchmove",function(a){if(
// prevent scrolling the page if necessary
u||a.originalEvent.preventDefault(),a.originalEvent.touches.length){
// see how far user swiped
var b=(n-a.originalEvent.touches[0].pageY)/d.touchScrollStep;
// scroll content
e(b,!0),n=a.originalEvent.touches[0].pageY}}),
// set up initial height
g(),
// check start position
"bottom"===d.start?(
// scroll content to bottom
A.css({top:v.outerHeight()-A.outerHeight()}),e(0,!0)):"top"!==d.start&&(
// assume jQuery selector
e(a(d.start).position().top,null,!0),
// make sure bar stays hidden
d.alwaysVisible||A.hide()),
// attach scroll events
f()}}),this}}),a.fn.extend({slimscroll:a.fn.slimScroll})}(jQuery);